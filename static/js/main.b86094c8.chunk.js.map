{"version":3,"sources":["components/home/Letter.js","components/home/Random.js","components/home/Search.js","components/home/NoneFound.js","components/home/CocktailList.js","components/home/Home.js","components/cocktail/CocktailDetails.js","App.js","serviceWorker.js","index.js"],"names":["Letter","props","addStyle","searchedLetter","searchLetter","usingLetter","onClick","buttonClick","className","Random","drinkId","Axios","get","then","res","data","drinks","idDrink","history","push","type","onPress","getRandomCocktail","React","Component","withRouter","Search","useState","defaultValue","searchValue","setSearchValue","onSubmit","event","preventDefault","formSubmit","value","onChange","target","placeholder","required","NoneFound","Container","class","Cocktail","to","pathname","id","usedLetter","letter","usedSearch","search","wasLetterUsed","Image","src","image","alt","name","width","thumbnail","CocktailList","cocktails","setCocktails","useEffect","searchByLetter","sort","a","b","strDrink","localeCompare","length","map","cocktail","key","strDrinkThumb","alphabet","split","Home","previousSearchType","location","undefined","previousLetter","firstLetter","setFirstLetter","previousSearch","searchText","setSearchText","useLetter","setUseLetter","CocktailDetails","ingredients","instructions","alcoholic","glass","cocktailInfo","setCocktailInfo","match","params","cocktailData","ingredientsList","i","ingredient","measurement","substring","strInstructions","strAlcoholic","strGlass","window","scrollTo","Row","Col","md","Badge","pill","variant","App","basename","process","exact","path","component","href","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b86094c8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Letter(props) {\r\n  const addStyle = (props.searchedLetter===props.searchLetter) && props.usingLetter;\r\n\r\n  return (\r\n    <button\r\n      onClick={props.buttonClick} \r\n      className={'letter-links' + (addStyle ? ' letter-selected' : '')}>\r\n        {props.searchLetter}\r\n      </button>\r\n  );\r\n} \r\n\r\nexport default Letter;","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { AwesomeButton } from 'react-awesome-button';\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport '../../../src/App.scss';\r\n\r\nclass Random extends React.Component {\r\n\tgetRandomCocktail() {\r\n\t\tlet drinkId = '';\r\n  \tAxios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php').then(res => {\r\n\t\t\tdrinkId = res.data.drinks[0].idDrink;\r\n\t\t\tthis.props.history.push(`/${drinkId}`);\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n    return (\r\n\t\t\t<AwesomeButton type=\"primary\" onPress={() => this.getRandomCocktail() }>Surprise me!</AwesomeButton>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Random);","import React, { useState } from 'react';\r\n\r\nfunction Search(props) {\r\n  const [searchValue, setSearchValue] = useState(props.defaultValue || '');\r\n\r\n  const handleSearchTermSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.formSubmit(searchValue);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSearchTermSubmit}>\r\n          <input \r\n            type=\"text\" \r\n            value={searchValue}\r\n            onChange={event => setSearchValue(event.target.value)}\r\n            placeholder=\"Enter a cocktail name\"\r\n            required \r\n          />\r\n          <button className=\"btn btn-primary btn-search\">\r\n            <i className=\"glyphicon glyphicon-search\"></i>\r\n          </button>\r\n      </form>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default Search;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction NoneFound() {\r\n  return (\r\n  \t<Container>\r\n      <div class=\"center\">\r\n        <p>Oops! No cocktails were found</p>\r\n      </div>\r\n    </Container>\r\n  );\r\n} \r\n\r\nexport default NoneFound;","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Image } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../../src/App.scss';\r\nimport NoneFound from './NoneFound';\r\n\r\nfunction CocktailList(props) {\r\n  const [cocktails, setCocktails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.searchByLetter){\r\n      Axios.get(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${props.letter}`).then(res => {\r\n\t\t\t  if(res.data.drinks) {\r\n\t\t\t  \tsetCocktails(res.data.drinks.sort((a, b) => a.strDrink.localeCompare(b.strDrink)));\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t  \tsetCocktails([]);\r\n\t\t\t  }\r\n      });\r\n    }\r\n    else {\r\n      Axios.get(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${props.search}`).then(res => {\r\n\t\t\t  if (res.data.drinks) {\r\n\t\t\t  \tsetCocktails(res.data.drinks.sort((a, b) => a.strDrink.localeCompare(b.strDrink)));\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t  \tsetCocktails([]);\r\n\t\t\t  }\r\n      });\r\n    }\r\n  }, [props.letter, props.search, props.searchByLetter]);\r\n  \r\n  if (cocktails.length > 0){\r\n    return (\r\n      <div className=\"center\"> \r\n        \r\n        {cocktails.map(cocktail => \r\n          <Cocktail \r\n            letter={props.letter}\r\n            search = {props.search}\r\n            usingLetter={props.searchByLetter}\r\n            key={cocktail.idDrink} \r\n            id={cocktail.idDrink} \r\n            name={cocktail.strDrink} \r\n            image={cocktail.strDrinkThumb}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\t\r\n  else {\r\n    return (\r\n      <NoneFound />\r\n    );\r\n  }\r\n}\r\n\r\nfunction Cocktail(props) {\r\n  return (\r\n    <NavLink to={{\r\n      pathname: `/${props.id}`,\r\n      usedLetter: props.letter,\r\n      usedSearch: props.search,\r\n      wasLetterUsed: props.usingLetter\r\n    }}>\r\n      <figure className=\"zoom\">\r\n        <Image \r\n          src={props.image}\r\n          alt={props.name} \r\n          width=\"200\" \r\n          thumbnail\r\n        />\r\n        <figcaption>{props.name}</figcaption>\r\n      </figure>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default CocktailList;","import React, { useState } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport '../../../src/App.scss';\r\nimport Letter from './Letter';\r\nimport Random from './Random';\r\nimport Search from './Search';\r\nimport CocktailList from './CocktailList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\r\n\r\nfunction Home(props) {\r\n  let previousSearchType = props.location.previousSearchType;\r\n  if (previousSearchType === undefined) {\r\n    previousSearchType = true;\r\n  }\r\n  const [firstLetter, setFirstLetter] = useState(props.location.previousLetter || 'A');\r\n  const [searchText, setSearchText] = useState(props.location.previousSearch || '');\r\n  const [useLetter, setUseLetter] = useState(previousSearchType);\r\n\r\n  const cocktailsByLetter = (letterValue) => {\r\n    setFirstLetter(letterValue);\r\n    setUseLetter(true);\r\n  }\r\n\r\n  const cocktailsBySearch = (searchValue) => {\r\n    setSearchText(searchValue);\r\n    setUseLetter(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-body\">\r\n      <Container>\r\n        <div className=\"center\">\r\n          <h1>Discover new cocktails!</h1>\r\n        </div>\r\n        <div className=\"center\">\r\n          <div>\r\n          <Search defaultValue={!useLetter ? props.location.previousSearch : ''} formSubmit={cocktailsBySearch}/>\r\n          <Random />\r\n          </div>\r\n          {alphabet.map(letter => \r\n            <Letter \r\n              key={letter} \r\n              searchLetter={letter} \r\n              searchedLetter={firstLetter}\r\n              usingLetter={useLetter}\r\n              buttonClick={() => cocktailsByLetter(letter)}\r\n            />\r\n          )}\r\n        </div>\r\n        <CocktailList \r\n          letter={firstLetter} \r\n          search={searchText}\r\n          searchByLetter={useLetter}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Badge } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AwesomeButton } from 'react-awesome-button';\r\nimport Axios from 'axios';\r\n\r\nfunction CocktailDetails(props) {\r\n\tconst [cocktailInfo, setCocktailInfo] = useState({\r\n\t\timage: '', \r\n\t\tname: '', \r\n\t\tingredients: [],\r\n\t\tinstructions: '',\r\n\t\talcoholic: '',\r\n\t\tglass: ''\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tAxios.get(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${props.match.params.id}`).then(res => {\r\n\t\t\tconst cocktailData = res.data.drinks[0];\r\n\t\t\tconst ingredientsList = [];\r\n\r\n\t\t\tfor (let i = 1; i <= 15; i++) {\r\n\t\t\t\tconst ingredient = cocktailData[`strIngredient${i}`];\r\n\t\t\t\tlet measurement = cocktailData[`strMeasure${i}`];\r\n\t\t\t\tif (measurement) {\r\n\t\t\t\t\tmeasurement = ` (${measurement.substring(0, measurement.length - 1)}) `;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmeasurement = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ingredient){\r\n\t\t\t\t\tingredientsList.push(cocktailData[`strIngredient${i}`] + measurement);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsetCocktailInfo({\r\n\t\t\t\timage: cocktailData.strDrinkThumb,\r\n\t\t\t\tname: cocktailData.strDrink, \r\n\t\t\t\tingredients: ingredientsList,\r\n\t\t\t\tinstructions: cocktailData.strInstructions,\r\n\t\t\t\talcoholic: cocktailData.strAlcoholic,\r\n\t\t\t\tglass: cocktailData.strGlass\r\n\t\t\t});\r\n\r\n\t\t\twindow.scrollTo(0, 0);\r\n\t\t});\r\n\t}, [props.match.params.id]);\r\n\t\t\r\n  return (\r\n  \t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t  <br/>\r\n\t\t\t\t\t<NavLink to={{\r\n\t\t\t\t\t\tpathname: '/',\r\n\t\t\t\t\t\tpreviousLetter: props.location.usedLetter,\r\n\t\t\t\t\t\tpreviousSearch: props.location.usedSearch,\r\n\t\t\t\t\t\tpreviousSearchType: props.location.wasLetterUsed\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<AwesomeButton type=\"primary\">\r\n\t\t\t\t\t\t\t<i className=\"glyphicon glyphicon-arrow-left back-icon\"/>Back to cocktails\r\n\t\t\t\t\t\t</AwesomeButton>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<img src={cocktailInfo.image} alt={cocktailInfo.strDrink} width=\"100%\" className=\"cocktail-image\"></img>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<h2>{cocktailInfo.name}</h2>\r\n\t\t\t\t\t\t\t<Badge pill variant=\"danger\">\r\n\t\t\t\t\t\t\t\t{cocktailInfo.alcoholic}\r\n  \t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t<Badge pill variant=\"primary\">\r\n\t\t\t\t\t\t\t\t<i className=\"glyphicon glyphicon-glass icon-space\"/>{cocktailInfo.glass}\r\n  \t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t\t\t<h4>Ingredients</h4>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{cocktailInfo.ingredients.map(ingredient => \r\n\t\t\t\t\t\t\t\t\t<li key={ingredient}>\r\n\t\t\t\t\t\t\t\t\t\t{ingredient} \r\n\t\t\t\t\t\t\t\t\t</li> \r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t\t\t<h4>Instructions</h4>\r\n\t\t\t\t\t\t\t<p>{cocktailInfo.instructions}</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n  \t</Container>\r\n  );\r\n} \r\n\r\nexport default CocktailDetails;","import React from 'react';\r\nimport './App.scss';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport Home from '../src/components/home/Home';\r\nimport CocktailDetails from '../src/components/cocktail/CocktailDetails';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"main-body\">\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <Route exact path='/:id' component={CocktailDetails} />\r\n            </Switch>\r\n        </HashRouter>\r\n      </div>\r\n      <footer className=\"footer\">\r\n        This site was created for educational purposes using the API provided by <a href=\"https://www.thecocktaildb.com/api.php\">TheCocktailDB</a>. Please support their site!\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}